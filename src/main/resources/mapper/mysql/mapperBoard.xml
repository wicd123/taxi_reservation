<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.mapperBoard">
    
    <select id="getBoardName" parameterType="string" resultType="string">        
        SELECT boardnm
          FROM TB_Bbs_Board
         WHERE boardcd = #{boardcd}
    </select>
    
    <select id="getBoardOne" parameterType="string" resultType="ModelBoard">
        SELECT boardcd, boardnm, UseYN 
          FROM TB_Bbs_Board 
         WHERE boardcd = #{boardcd}
    </select>
    
    <select id="getBoardList" resultType="ModelBoard">
        SELECT boardcd, boardnm, UseYN, InsertUID, InsertDT, UpdateUID, UpdateDT
          FROM TB_Bbs_Board
        ORDER BY boardnm
    </select>         
        
    <insert id="insertBoard" parameterType="ModelBoard">
        INSERT INTO 
        TB_Bbs_Board ( boardcd   , boardnm   , UseYN   , InsertUID   , InsertDT   , UpdateUID   , UpdateDT    )
        VALUES       ( #{boardcd}, #{boardnm}, #{UseYN}, #{InsertUID}, #{InsertDT}, #{UpdateUID}, #{UpdateDT} )
    </insert>
    
    <update id="updateBoard" parameterType="hashmap">
        UPDATE TB_Bbs_Board 
            SET boardnm   = #{updateValue.boardnm}
              , UseYN     = #{updateValue.UseYN}
              , UpdateUID = #{updateValue.UpdateUID}
              , UpdateDT  = #{updateValue.UpdateDT}
            WHERE 1 = 1 
              <if test="searchValue.boardcd != null and searchValue.boardcd != ''" >
              AND boardcd    = #{searchValue.boardcd}
              </if>
              <if test="searchValue.boardnm != null and searchValue.boardnm != ''">
              AND boardnm  = #{searchValue.boardnm}
              </if>
              <if test="searchValue.UseYN != null">
              AND UseYN    = #{searchValue.UseYN}
              </if>
    </update>
    
    <delete id="deleteBoard" parameterType="ModelBoard">
        DELETE FROM TB_Bbs_Board 
         WHERE 1 = 1 
          <if test="boardcd != null and boardcd != ''" >
          AND boardcd  = #{boardcd}
          </if>
          <if test="boardnm != null and boardnm != ''">
          AND boardnm  = #{boardnm}
          </if>
          <if test="UseYN != null">
          AND UseYN    = #{UseYN}
          </if>
    </delete>
    
    <select id="getBoardSearch" parameterType="ModelBoard" resultType="ModelBoard">
        SELECT boardcd, boardnm, UseYN 
          FROM TB_Bbs_Board
         WHERE 1 =1 
           <if  test="boardcd != null and boardcd != ''">
           AND boardcd LIKE CONCAT( '%' , #{boardcd} ,  '%' )
           </if>
           <if  test="boardnm != null and boardnm != ''">
           AND boardnm LIKE CONCAT( '%' , #{boardnm} , '%' )
           </if>
    </select>
        
    <select id="getBoardTotalRecord" parameterType="hashmap" resultType="int">
        SELECT count(*) FROM TB_Bbs_Board 
         WHERE 1 = 1
            <if test="boardcd != null and boardcd != ''">
            AND boardcd = #{boardcd}
            </if>
            <if test="boardnm != null and boardnm != ''">
            AND boardnm LIKE CONCAT( '%' , #{searchWord} , '%' )
            </if>
    </select>
    
    <select id="getBoardPaging"  parameterType="hashmap"  resultType="ModelBoard">
        SELECT boardcd, boardnm, UseYN
        FROM (
            SELECT @RNUM := @RNUM + 1 AS r, a.* 
                FROM (
                    SELECT 
                        boardcd, boardnm, UseYN
                    FROM 
                        TB_BBS_Board
                    WHERE 1 = 1
                        <if test="boardcd != null and boardcd != ''">
                        AND boardcd = #{boardcd}
                        </if>
                        <if test="boardnm != null and boardnm != ''">
                        AND boardnm LIKE CONCAT( '%' , #{searchWord} , '%' )
                        </if>
                    GROUP BY boardcd, boardnm, UseYN
                    ORDER BY boardcd DESC
                ) a, (SELECT @RNUM:=0) b
            ) temp
        WHERE r BETWEEN #{start} AND #{end}
    </select>  
    
    <!-- mysql multi insert
        INSERT INTO t (col1, col2, col3) 
               VALUES ('val1_1', 'val1_2', 'val1_3')
                    , ('val2_1', 'val2_2', 'val2_3')
                    , ('val3_1', 'val3_2', 'val3_3')
        ;
     -->
    <insert id="insertBoardList" parameterType="java.util.List">
        INSERT INTO TB_Bbs_Board( boardcd , boardnm , UseYN  )
        VALUES
            <foreach collection="list" item="item" index="index" open="(" separator="),(" close=")">
                #{item.boardcd} , #{item.boardnm} , #{item.UseYN}
            </foreach>
    </insert>
    
    <select id="getArticleTotalRecord" parameterType="hashmap" resultType="int">
        SELECT count(*) FROM TB_BBS_Article 
         WHERE boardcd = #{boardcd}
            <if test="searchWord != null and searchWord != ''">
            AND ( title LIKE CONCAT('%', #{searchWord}, '%') OR content LIKE CONCAT('%', #{searchWord}, '%') )
            </if>
    </select>   

    <select id="getArticleList" parameterType="hashmap" resultType="ModelArticle">
        SELECT articleno, title, regdate, hit, attachfileNum, commentNum , countgood, countbad
        FROM (
            SELECT @RNUM := @RNUM + 1 AS r, a.* 
            FROM (
                    SELECT a.articleno articleno, 
                           a.title, 
                           a.regdate, 
                           a.hit,
                           a.countgood,
                           a.countbad, 
                           count(distinct(f.attachfileno)) attachfileNum, 
                           count(distinct(c.commentno)) commentNum
                    FROM 
                        TB_BBS_Article a
                        LEFT OUTER JOIN TB_BBS_Attachfile f ON a.articleno = f.articleno
                        LEFT OUTER JOIN TB_BBS_Comments   c ON a.articleno = c.articleno
                    WHERE
                        a.boardcd = #{boardcd}
                        <if test="searchWord != null">
                        AND ( title LIKE CONCAT('%', #{searchWord}, '%') OR content LIKE CONCAT('%', #{searchWord}, '%') )
                        </if>
                    GROUP BY a.articleno, title, a.regdate, hit
                    ORDER BY articleno DESC
                 ) a, (SELECT @RNUM:=0) b
            ) temp
        WHERE r BETWEEN #{start} AND #{end}
    </select>  

    
    <select id="getArticle" parameterType="int" resultType="ModelArticle">
        SELECT articleno, boardcd, title, content, email, hit, regdate, countgood , countbad
        FROM TB_BBS_Article
        WHERE articleno = #{articleno}
    </select>
    
    <insert id="insertArticle" parameterType="ModelArticle" useGeneratedKeys="true" keyProperty="articleno" >
        INSERT INTO 
        TB_BBS_Article ( boardcd   , title   , content   , email   , hit, regdate , InsertUID   , InsertDT   , UpdateUID   , UpdateDT     )
            VALUES     ( #{boardcd}, #{title}, #{content}, #{email}, 0  ,   now() , #{InsertUID}, #{InsertDT}, #{UpdateUID}, #{UpdateDT}  )
    </insert>   
    
    <update id="updateArticle" parameterType="hashmap">
        UPDATE TB_BBS_Article 
           SET title     = #{updateValue.title}
             , content   = #{updateValue.content} 
             , UseYN     = #{updateValue.UseYN    , jdbcType=BOOLEAN}
             , UpdateUID = #{updateValue.UpdateUID, jdbcType=VARCHAR}
             , UpdateDT  = #{updateValue.UpdateDT , jdbcType=DATE   }
         WHERE  1 = 1 
              <if test="searchValue.boardcd != null and searchValue.boardcd != ''" >
              AND boardcd    = #{searchValue.boardcd}
              </if>
              <if test="searchValue.articleno != null and searchValue.articleno != ''">
              AND articleno  = #{searchValue.articleno}
              </if>
              <if test="searchValue.title != null and searchValue.title != ''">
              AND title      = #{searchValue.title}
              </if>
              <if test="searchValue.email != null and searchValue.email != ''">
              AND email      = #{searchValue.email}
              </if>
              <if test="searchValue.UseYN != null">
              AND UseYN      = #{searchValue.UseYN}
              </if>
    </update>
    
    <delete id="deleteArticle" parameterType="ModelArticle">
        DELETE FROM TB_BBS_Article 
         WHERE 1 = 1 
          <if test="articleno != null and articleno != ''" >
          AND articleno = #{articleno}
          </if>
          <if test="boardcd != null and boardcd != ''">
          AND boardcd  = #{boardcd}
          </if>
          <if test="email != null and email != ''">
          AND email    = #{email}
          </if>
          <if test="UseYN != null">
          AND UseYN    = #{UseYN}
          </if>
    </delete>
    
    <update id="increaseHit" parameterType="int">
        UPDATE TB_BBS_Article 
           SET hit=hit+1 
         WHERE articleno=#{articleno}
    </update>
    
    <update id="changeArticleGood" parameterType="map">
        UPDATE TB_BBS_Article 
           SET countgood=countgood + ( #{count} ) 
         WHERE articleno=#{articleno}
    </update>
    
    <update id="changeArticleBad" parameterType="map">
        UPDATE TB_BBS_Article 
           SET countbad=countbad + ( #{count} ) 
         WHERE articleno=#{articleno}
    </update>
    
    
    
    
    
    <select id="getNextArticle" parameterType="hashmap" resultType="ModelArticle">
        SELECT articleno, title
        FROM
        (
            SELECT @RNUM := @RNUM + 1 AS r,a.*
            FROM
                (SELECT articleno, title 
                   FROM TB_BBS_Article 
                  WHERE boardcd      =    #{boardcd} 
                    AND articleno   &gt;  #{articleno}
                    <if test="searchWord != null">
                        AND ( title LIKE CONCAT('%', #{searchWord}, '%') OR content LIKE CONCAT('%', #{searchWord}, '%') )
                    </if> 
                    ORDER BY articleno ASC
                ) a
                , (SELECT @RNUM:=0) b
        ) c
        WHERE r = 1
    </select>
    
    <select id="getPrevArticle" parameterType="hashmap" resultType="ModelArticle">
        SELECT articleno, title
        FROM
        (
            SELECT @RNUM := @RNUM + 1 AS r,a.*
            FROM
            (SELECT articleno, title 
               FROM TB_BBS_Article 
              WHERE boardcd     =    #{boardcd} 
                AND articleno  &lt;  #{articleno}
                <if test="searchWord != null">
                AND ( title LIKE CONCAT('%', #{searchWord}, '%')
                       OR content LIKE CONCAT('%', #{searchWord}, '%') )
                </if> 
                ORDER BY articleno DESC
            ) a
            , (SELECT @RNUM:=0) b
        ) c
        WHERE r = 1
    </select>





    <select id="getAttachFile" parameterType="int" resultType="ModelAttachFile">
        SELECT attachfileno, filename, tempfilename, filetype, filesize, articleno
          FROM TB_BBS_Attachfile
         WHERE attachfileno = #{attachfileno}
    </select>
    
    <select id="getAttachFileList" parameterType="int" resultType="ModelAttachFile">
        SELECT attachfileno, filename, tempfilename, filetype, filesize,articleno 
          FROM TB_BBS_Attachfile 
         WHERE articleno = #{articleno} 
        ORDER BY attachfileno
    </select>
    
    <insert id="insertAttachFile" parameterType="ModelAttachFile">
        INSERT INTO 
        TB_BBS_Attachfile (    filename,   tempfilename ,   filetype , filesize   , articleno   , InsertUID   , InsertDT   , UpdateUID   , UpdateDT    )
        VALUES            ( #{filename}, #{tempfilename}, #{filetype}, #{filesize}, #{articleno}, #{InsertUID}, #{InsertDT}, #{UpdateUID}, #{UpdateDT} )
    </insert>
    
    <delete id="deleteAttachFile" parameterType="ModelAttachFile">
        DELETE FROM TB_BBS_Attachfile          
         WHERE 1 = 1 
          <if test="attachfileno != null and attachfileno != ''" >
          AND attachfileno = #{attachfileno}
          </if>
          <if test="articleno != null and articleno != ''">
          AND articleno  = #{articleno}
          </if>
          <if test="UseYN != null">
          AND UseYN    = #{UseYN}
          </if>
    </delete>
    
    <select id="getComment" parameterType="int" resultType="ModelComments">
        SELECT commentno,articleno,email,memo,regdate, countgood, countbad
        FROM TB_BBS_Comments 
        WHERE commentno = #{commentno}
    </select>
    
    <select id="getCommentList" parameterType="int" resultType="ModelComments">
        SELECT commentno, articleno, email, memo, regdate, countgood, countbad
        FROM TB_BBS_Comments
        WHERE articleno = #{articleno}
        ORDER BY commentno DESC
    </select>
       
    <insert id="insertComment" parameterType="ModelComments" useGeneratedKeys="true" keyProperty="commentno">
        INSERT INTO 
        TB_BBS_Comments ( articleno   , email   , memo   , regdate   , InsertUID   , InsertDT   , UpdateUID   , UpdateDT    )
                 VALUES ( #{articleno}, #{email}, #{memo}, #{regdate}, #{InsertUID}, #{InsertDT}, #{UpdateUID}, #{UpdateDT} )
    </insert>
    
    <update id="updateComment" parameterType="hashmap">
        UPDATE TB_BBS_Comments 
           SET memo      = #{updateValue.memo   } 
             , regdate   = #{updateValue.regdate} 
             , UseYN     = #{updateValue.UseYN  } 
         WHERE  1 = 1 
              <if test="searchValue.commentno != null and searchValue.commentno != ''" >
              AND commentno = #{searchValue.commentno}
              </if>
              <if test="searchValue.articleno != null and searchValue.articleno != ''">
              AND articleno = #{searchValue.articleno}
              </if>
              <if test="searchValue.email != null and searchValue.email != ''">
              AND email     = #{searchValue.email}
              </if>
    </update>
    
    <update id="changeCommentGood" parameterType="map">
        UPDATE TB_BBS_Comments
           SET countgood=countgood + ( #{count} ) 
         WHERE Commentno=#{Commentno}
    </update>
    
    <update id="changeCommentBad" parameterType="map">
        UPDATE TB_BBS_Comments
           SET countbad=countbad + ( #{count} ) 
         WHERE Commentno=#{Commentno}
    </update>
    
    <delete id="deleteComment" parameterType="ModelComments">
        DELETE FROM TB_BBS_Comments 
        WHERE 1 = 1 
          <if test="commentno != null and commentno != ''" >
          AND commentno = #{commentno}
          </if>
          <if test="articleno != null and articleno != ''">
          AND articleno  = #{articleno}
          </if>
          <if test="email != null and email != ''">
          AND email    = #{email}
          </if>
          <if test="UseYN != null">
          AND UseYN    = #{UseYN}
          </if>
    </delete>
    
    <select id="getArticleRecommendOne" parameterType="ModelArticleRecommend" resultType="ModelArticleRecommend">
    
           select * 
            from TB_BBS_Article_Recommend
            where articleno = #{articleno}
            and userid = #{userid}
           
    </select>
    
    <update id="deleteArticleRecommend" parameterType="ModelArticleRecommend">
           DELETE FROM TB_BBS_Article_Recommend
            WHERE articleno = #{articleno}
            and userid = #{userid}
           
    </update>
    
    <update id="mergeArticleRecommend" parameterType="ModelArticleRecommend">
           insert into TB_BBS_Article_Recommend( articleno, userid, good , bad )
                                         values( #{articleno}, #{userid}, ifnull(#{good}, 0 ), ifnull(#{bad}, 0) )
            on duplicate key
            update good= ifnull(#{good}, 0 )
                    , bad= ifnull(#{bad},  0 );
           
    </update>
    
    <update id="updateGoodBadCount" parameterType="int">
                      UPDATE TB_BBS_Article a
            INNER JOIN( select articleno
                            , sum(good) good
                            , sum(bad) bad
                         from TB_BBS_Article_Recommend
                        where articleno =   #{articleno}
                       ) r
                ON a.articleno = r.articleno
            set a.countgood = r.good
               ,a.countbad = r.bad
            where a.articleno =   #{articleno}
           
    </update>
    

  

 </mapper>
